version: '3.7'

networks:
  kafka-connect-example-network:
    driver: bridge

services:
  mssql:
    image: mcmoe/mssqldocker
    container_name: kafka-connect-example-mssql
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: P@ssword
      MSSQL_DB: example
      MSSQL_USER: example
      MSSQL_PASSWORD: P@ssword
    volumes:
      - ./setup/setup-mssql.sql:/usr/config/setup.sql
    ports:
      - 1433:1433
    expose:
      - 1433

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: kafka-connect-example-zookeeper
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka-connect-example-kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "ORDERS:10:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/connect-standalone.properties:/opt/kafka/config/connect-standalone.properties
      - ./config/connect-mssql-source.properties:/opt/kafka/config/connect-mssql-source.properties
      - ./config/connect-log4j.properties:/opt/kafka/config/connect-log4j.properties
      - ./libs/jdbc-plugin:/opt/kafka/libs/jdbc-plugin
      - ./libs/jdbc-drivers/mssql-jdbc-12.4.2.jre11.jar:/opt/kafka/libs/mssql-jdbc-12.4.2.jre11.jar
      - ./libs/jdbc-drivers/postgresql-42.2.10.jar:/opt/kafka/libs/postgresql-42.2.10.jar
    ports:
      - 9092:9092
      - 8083:8083
    expose:
      - 9093
      - 8083
    depends_on:
      - zookeeper
      - mssql
    command:
      - /usr/bin/start-kafka.sh
      - /opt/kafka/bin/connect-standalone.sh /opt/kafka/config/connect-standalone.properties /opt/kafka/config/connect-mssql-source.properties
